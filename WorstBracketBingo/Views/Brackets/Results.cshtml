@model WorstBracketBingo.Models.BracketBingoViewModels.BoardsViewModel

@{
    ViewData["Title"] = Model.Bracket.Title + " Boards";
}

<div>
    <h2>@ViewData["Title"]</h2>
    @if (Model.CurrentRound > 0)
    {
        var currentRound = Model.Bracket.Finished == true ? @Model.CurrentRound : @Model.CurrentRound - 1;
        <h4>Round @currentRound Results</h4>
    }
    else if(Model.CurrentRound == 0)
    {
        <h4><em>Pending first round results</em></h4>
    }
    <hr />
</div>

@if(Model.CurrentRound == -1)
{
    <p>The Bracket has not yet begun, go to manage brackets to begin rounds.</p>
}
else
{
    if (Model.CurrentRound > 0)
    {
        if (Model.Bracket.Finished == true)
        {
            <div class="row">
                <div class="col-12">
                    <h5 class="text-center">Last One(s) Standing</h5>
                </div>
            </div>
            <div class="row justify-content-center">
                @for (int i = 0; i < Model.LastContenders.Count; i++)
                {
                    <div class="col-4 text-center">
                        <img class="img-fluid rounded" src="@Url.Content("~/images/uploads/" + Model.LastContenders[i].Thumbnail)" />
                        <h5 class="mb-1">@Model.LastContenders[i].Name</h5>
                        <p>@Model.LastContenders[i].Tag</p>
                    </div>
                }
            </div>
            <hr />

        }
        <div class="row pb-2">
            <div class="col-12">
                <h4>Stats</h4>
            </div>
            <div class="col-lg-6 col-md-12">
                <dl>
                    <dt>
                        First Bingo(s)
                        @if (Model.FirstBingos != null && Model.FirstBingos.Count > 0)
                        {
                            @: - Round @Model.FirstBingos.First().Round.RoundNumber
                        }
                    </dt>
                    <dd>
                        @if (Model.FirstBingos != null && Model.FirstBingos.Count > 0)
                        {
                            for (int i = 0; i < Model.FirstBingos.Count(); i++)
                            {
                                @Model.FirstBingos[i].BingoBoard.Title <small>@Model.FirstBingos[i].Label</small><br />
                            }
                        }
                        else
                        {
                            @:No bingos yet
                        }
                    </dd>
                </dl>
                <dl>
                    <dt>
                        Last Bingo(s)
                        @if (Model.LastBingos != null && Model.FirstBingos.Count > 0)
                        {
                            @: - Round @Model.LastBingos.First().Round.RoundNumber
                        }
                    </dt>
                    <dd>
                        @if (Model.LastBingos != null && Model.LastBingos.Count > 0)
                        {
                            for (int i = 0; i < Model.LastBingos.Count(); i++)
                            {
                                @Model.LastBingos[i].BingoBoard.Title <small>@Model.LastBingos[i].Label</small><br />
                            }
                        }
                        else
                        {
                            @:Somebody still has no bingos
                        }
                    </dd>
                </dl>
            </div>
            <div class="col-lg-6 col-md-12">
                <dl>
                    <dt>Total Rounds Alive For Entrants</dt>
                    <dd>
                        @foreach (var board in Model.Bracket.BingoBoards)
                        {
                            @board.Title <text>: </text> <strong>@board.ContenderRoundsAlive</strong><br />

                        }
                    </dd>
                    <dt>
                        First Complete Elimination(s)
                        @if (Model.FirstElimination.RoundNumber != int.MaxValue)
                        {
                            @: - Round @Model.FirstElimination.RoundNumber
                        }
                    </dt>
                    <dd>
                        @if (Model.FirstElimination.BracketTitles.Count > 0)
                        {
                            for (int i = 0; i < Model.FirstElimination.BracketTitles.Count; i++)
                            {
                                @Model.FirstElimination.BracketTitles[i] <br />
                            }

                        }
                        else
                        {
                            @:Nobody has been fully eliminated
                        }
                    </dd>
                </dl>
            </div>
        </div>

    }

    var first = true;
    <ul class="nav nav-pills nav-fill mb-3" id="pills-tab" role="tablist">
        @foreach (var board in Model.Bracket.BingoBoards)
        {
            var active = "";
            if(first == true)
            {
                active = "active";
                first = false;
            }

            <li class="nav-item">
                <a class="nav-link @active" id="pills-@board.BingoBoardID-tab" data-toggle="pill" href="#pills-@board.BingoBoardID" role="tab">@board.Title</a>
            </li>

        }
    </ul>

    first = true;

    <div class="tab-content" id="pills-tabContent">
        @foreach (var board in Model.Bracket.BingoBoards)
        {
            var active = "";
            if (first == true)
            {
                active = "show active";
                first = false;
            }

            <div class="tab-pane fade @active" id="pills-@board.BingoBoardID" role="tabpanel">
                <hr />
                <h1 class="display-4 text-center">@board.Title</h1>
                <hr />
                <div class="row justify-content-center mx-auto w-75">
                        @for (int i = 0; i < board.BoardPieces.Count; i++)
                        {
                            if (i % 5 == 0 && i > 0)
                            {
                                @:</div><div class="row justify-content-center mx-auto w-75">
                            }
                            <div class="col-2" style="padding: 0" data-toggle="popover" title="@board.BoardPieces[i].Contender.Entrant.Name" data-content="@board.BoardPieces[i].Contender.Entrant.Tag">
                                @{ 
                                    var eliminated = board.BoardPieces[i].Contender.Eliminated == true ? "eliminatedThumb" : "";
                                }

                                <img class="img-fluid @eliminated" src="@Url.Content("~/images/uploads/" + @board.BoardPieces[i].Contender.Entrant.Thumbnail)" alt="" />
                                @if (board.BoardPieces[i].Contender.RoundsAlive <= Model.CurrentRound - 1)
                                {
                                    <div class="eliminatedOverlay"></div>
                                }
                            </div>
                        }
                </div>
            </div>
        }
    </div>
}


<div class="mt-3">
    <a asp-action="Manage" asp-route-id="@Model.Bracket.BracketID" class="btn btn-secondary">Manage Bracket</a>
</div>

@section Scripts {
    <script src="~/js/bingoBoard.js"></script>
}